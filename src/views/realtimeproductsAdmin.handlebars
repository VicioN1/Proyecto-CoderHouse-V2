{{!-- <style>
    .product {
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 10px;
    }
    button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    }
    button:disabled {
    background-color: #d3d3d3; 
    color: #7a7a7a; 
    cursor: not-allowed;
    }
</style>
<div>
    <h1>Perfil de {{user.first_name}} {{user.last_name}}</h1>
    <p>Email: {{user.email}}</p>
    <p>Edad: {{user.age}}</p>
    <p>Rol: {{user.role}}</p>
    <p>cart: {{user.cart}}</p>
    <form action="/api/sessions/logout" method="POST">
        <button type="submit">Cerrar Sesión</button>
    </form>
    <form id="productForm">
        <h2>Agregar Nuevo Producto</h2>
        <label for="title">Título:</label>
        <input type="text" id="title" name="title" ><br>
        <label for="description">Descripción:</label>
        <input type="text" id="description" name="description" required><br>
        <label for="code">Código:</label>
        <input type="text" id="code" name="code" required><br>
        <label for="price">Precio:</label>
        <input type="number" id="price" name="price" required><br>
        <label for="stock">Stock:</label>
        <input type="number" id="stock" name="stock" required><br>
        <label for="category">Categoría:</label>
        <input type="text" id="category" name="category" required><br>
        <button type="submit">Agregar Producto</button>
    </form>
    <h1>Lista de Productos</h1>
    <div id="productList"></div>
    <button id="prevButton" disabled>Anterior</button>
    <button id="nextButton" disabled>Siguiente</button>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let currentPage = 1;
    let hasPrevPage, hasNextPage, prevPage, nextPage;
    let idcarrot= {{user.cart}}

    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');

    function loadProducts(page) {
        socket.emit('new', { page: page });
    }


    document.getElementById('productForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const formData = new FormData(event.target);
        const newProduct = {};
        formData.forEach((value, key) => {
            newProduct[key] = value;
        });
        socket.emit('productos', newProduct);
        event.target.reset();
    });


    

    prevButton.addEventListener('click', () => {
        if (hasPrevPage) {
            loadProducts(prevPage);
        }
    });

    nextButton.addEventListener('click', () => {
        if (hasNextPage) {
            loadProducts(nextPage);
        }
    });


    socket.on('realTimeProducts', productos => {
        const productList = document.getElementById('productList');
        productList.innerHTML = '';


        hasPrevPage = productos.hasPrevPage
        hasNextPage = productos.hasNextPage
        prevPage = productos.prevPage
        nextPage = productos.nextPage

        prevButton.disabled = !hasPrevPage;
        nextButton.disabled = !hasNextPage;
        productos.docs.forEach(producto => {
            const productDiv = document.createElement('div');
            productDiv.classList.add('product');
            productDiv.innerHTML = `
                <h2>${producto.idProduct}</h2>
                <h2>${producto.title}</h2>
                <p>${producto.description}</p>
                <p>Código: ${producto.code}</p>
                <p>Precio: $${producto.price}</p>
                <p>Stock: ${producto.stock}</p>
                <p>Categoría: ${producto.category}</p>
                <button class="deleteButton" data-product-code="${producto.idProduct}">Eliminar</button>
                 <div>
                    <button class="decreaseQuantity" data-product-code="${producto.idProduct}">-</button>
                    <span id="quantity-${producto.idProduct}">1</span>
                    <button class="increaseQuantity" data-product-code="${producto.idProduct}">+</button>
                </div> 
                <button class="addToCartButton" data-product-code="${producto.idProduct}">Agregar al Carrito</button>
            `;
            productList.appendChild(productDiv);
        });

        document.querySelectorAll('.deleteButton').forEach(button => {
            button.addEventListener('click', function () {
                const productCode = this.getAttribute('data-product-code');
                socket.emit('eliminarProducto', { currentPage ,productCode: productCode});
            });
        });
    });

    loadProducts(currentPage);
</script> --}}



{{!-- 
<link rel="stylesheet" href="/admin/assets/style.css">

	<!-- SIDEBAR -->
	<section id="sidebar">
		<a href="#" class="brand">
			<i class='bx bxs-smile'></i>
			<span class="text">AdminHub</span>
		</a>
		<ul class="side-menu top">
			<li class="active">
				<a href="#"  >
					<i class='bx bxs-dashboard'  ></i>
					<span class="text">Usuarios</span>
				</a>
			</li>
			<li>
				<a href="#" id="mystore">
					<i class='bx bxs-shopping-bag-alt' ></i>
					<span class="text">My Store</span>
				</a>
			</li>
			<li>
				<a href="#">
					<i class='bx bxs-message-dots' ></i>
					<span class="text">Message</span>
				</a>
			</li>
		</ul>
		<ul class="side-menu">
			<li>
				<a href="#" class="logout">

					<i class='bx bxs-log-out-circle' ></i>
					<form action="/api/sessions/logout" method="POST">
					<span class="text"><button type="submit">Cerrar Sesión</button></span>
    				</form>
				</a>
			</li>
		</ul>
	</section>
	<!-- SIDEBAR -->



	<!-- CONTENT -->
	<section id="content">
		<!-- NAVBAR -->
		<nav>
			<i class='bx bx-menu' ></i>
			<form action="#">
				<div class="form-input">
					<input type="search" placeholder="Search...">
					<button type="submit" class="search-btn"><i class='bx bx-search' ></i></button>
				</div>
			</form>
			<input type="checkbox" id="switch-mode" hidden>
			<label for="switch-mode" class="switch-mode"></label>
			<a href="#" class="notification">
				<i class='bx bxs-bell' ></i>
				<span class="num">8</span>
			</a>
			<a href="#" class="profile">
				<img src="/admin/assets/img/people.png" alt="people" />
			</a>
		</nav>
		<!-- NAVBAR -->

		<!-- MAIN -->
		<main>
			<div class="head-title">
				<div class="left">
					<h1>Lista de Usuarios</h1>
				</div>
			</div>


			<div class="table-data">
				<div class="order">
					<div class="head">
						<h3>Usuarios activos</h3>
						<i class='bx bx-search' ></i>
						<i class='bx bx-filter' ></i>
					</div>
					<table>
						<thead>
							<tr>
								<th>Email</th>
								<th>User</th>
								<th>Date Order</th>
								<th>Status</th>
							</tr>
						</thead>
						<tbody id="userList">
							
						</tbody>

						<button id="prevButton" disabled>Anterior</button>
						<button id="nextButton" disabled>  Siguiente</button>
					</table>
				</div>
			</div>
		</main>
	</section>
	

	<script src="/admin/assets/script.js"></script>
	<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let currentPage = 1;
    let hasPrevPage, hasNextPage, prevPage, nextPage;

	document.getElementById('mystore').addEventListener('click', function () {
        window.location.href = `/mystore`;
    });

    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');

	prevButton.addEventListener('click', () => {
        if (hasPrevPage) {
            loadProducts(prevPage);
        }
    });

    nextButton.addEventListener('click', () => {
        if (hasNextPage) {
            loadProducts(nextPage);
        }
    });

    function loadProducts(page) {
        socket.emit('viewUsers', { page: page });
    }

	socket.on('realTimeUsers', Users => {
        const productList = document.getElementById('userList');
        productList.innerHTML = '';


        prevPage = Users.prevPage
        nextPage = Users.nextPage

		hasPrevPage = Users.hasPrevPage
        hasNextPage = Users.hasNextPage

        prevButton.disabled = !hasPrevPage;
        nextButton.disabled = !hasNextPage;

        Users.docs.forEach(user => {
            const productDiv = document.createElement('tr');
            productDiv.classList.add('users');
            productDiv.innerHTML = `
				<td>
					<p>${user.email}</p>
				</td>
				<td>
					<p>${user.first_name} ${user.last_name}</p>
				</td>
				<td>${user.last_connection}</td>
				<td><span class="status completed">${user.role}</span></td>
            `;
            productList.appendChild(productDiv);
        });
	});

	loadProducts(currentPage);
</script> --}}




<link rel="stylesheet" href="/admin/assets/style.css">

<!-- SIDEBAR -->
<section id="sidebar">
    <a href="#" class="brand">
        <i class='bx bxs-smile'></i>
        <span class="text">AdminHub</span>
    </a>
    <ul class="side-menu top">
        <li class="active">
            <a href="#">
                <i class='bx bxs-dashboard'></i>
                <span class="text">Usuarios</span>
            </a>
        </li>
        <li>
            <a href="#" id="mystore">
                <i class='bx bxs-shopping-bag-alt'></i>
                <span class="text">My Store</span>
            </a>
        </li>
        <li>
            <a href="#">
                <i class='bx bxs-message-dots'></i>
                <span class="text">Message</span>
            </a>
        </li>
    </ul>
    <ul class="side-menu">
        <li>
            <a href="#" class="logout">
                <i class='bx bxs-log-out-circle'></i>
                <form action="/api/sessions/logout" method="POST">
                    <span class="text"><button type="submit">Cerrar Sesión</button></span>
                </form>
            </a>
        </li>
    </ul>
</section>
<!-- SIDEBAR -->

<!-- CONTENT -->
<section id="content">
    <!-- NAVBAR -->

    <!-- MAIN -->
    <main>
        <div class="head-title">
            <div class="left">
                <h1>Lista de Usuarios</h1>
            </div>
            <div class="right">
                <button id="deleteAllInactive" class="btn-delete-all">Eliminar usuarios inactivos (2+ días)</button>
            </div>
        </div>

        <div class="table-data">
            <div class="order">
                <div class="head">
                    <h3>Usuarios activos</h3>
                    <i class='bx bx-search'></i>
                    <i class='bx bx-filter'></i>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th>Email</th>
                            <th>User</th>
                            <th>Date Order</th>
                            <th>Status</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="userList"></tbody>
                    <button id="prevButton" disabled>Anterior</button>
                    <button id="nextButton" disabled>Siguiente</button>
                </table>
            </div>
        </div>
    </main>
</section>

<script src="/admin/assets/script.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let currentPage = 1;
    let hasPrevPage, hasNextPage, prevPage, nextPage;
	let emailUser = "{{user.email}}";

    document.getElementById('mystore').addEventListener('click', function () {
        window.location.href = `/mystore`;
    });

    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');

    prevButton.addEventListener('click', () => {
        if (hasPrevPage) {
            loadUsers(prevPage);
        }
    });

    nextButton.addEventListener('click', () => {
        if (hasNextPage) {
            loadUsers(nextPage);
        }
    });

    function loadUsers(page) {
        socket.emit('viewUsers', { page: page });
    }

    socket.on('realTimeUsers', users => {
        const userList = document.getElementById('userList');
        userList.innerHTML = '';

        prevPage = users.prevPage;
        nextPage = users.nextPage;

        hasPrevPage = users.hasPrevPage;
        hasNextPage = users.hasNextPage;

        prevButton.disabled = !hasPrevPage;
        nextButton.disabled = !hasNextPage;
		function formatDate(date) {
			const d = new Date(date);
			const day = String(d.getDate()).padStart(2, '0');
			const month = String(d.getMonth() + 1).padStart(2, '0'); // Los meses comienzan en 0
			const year = d.getFullYear();
			return `${day}-${month}-${year}`;
		}
        users.docs.forEach(user => {
            const userRow = document.createElement('tr');
            const lastConnection = formatDate(user.last_connection)
			console.log(lastConnection)
            const now = Date.now();
			console.log(now)
            const diffInDays = Math.floor((now - user.last_connection) / (1000 * 60 * 60 * 24));

            userRow.classList.add('user');
            if (diffInDays > 2) {
                userRow.classList.add('inactive');
            }

            userRow.innerHTML = `
                <td>${user.email}</td>
                <td>${user.first_name} ${user.last_name}</td>
                <td>${lastConnection}</td>
                <td>
                    <select id="role-${user._id}">
                        <option value="user" ${user.role === 'user' ? 'selected' : ''}>User</option>
                        <option value="premiun" ${user.role === 'premiun' ? 'selected' : ''}>Premium</option>
                    </select>
                    <button onclick="updateRole('${user._id}')">Actualizar</button>
                </td>
                <td>
                    <button class="btn-delete" onclick="deleteUser('${user._id}')">Eliminar</button>
                </td>
            `;
            userList.appendChild(userRow);
        });
    });

    function updateRole(userId) {
        const selectedRole = document.getElementById(`role-${userId}`).value;
        socket.emit('updateUserRole', { userId, role: selectedRole });
    }

    function deleteUser(userId) {
        socket.emit('deleteUser', { userId });
    }

    document.getElementById('deleteAllInactive').addEventListener('click', () => {
        socket.emit('deleteAllInactiveUsers', { page: currentPage, emailUser });
    });

    loadUsers(currentPage);
</script>

<style>
    .inactive {
        background-color: #f8d7da;
    }

    .btn-delete {
        background-color: #ff4c4c;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
    }

    .btn-delete-all {
        background-color: #dc3545;
        color: white;
        padding: 10px 15px;
        border: none;
        cursor: pointer;
    }

    .btn-delete-all:hover {
        background-color: #c82333;
    }
</style>
