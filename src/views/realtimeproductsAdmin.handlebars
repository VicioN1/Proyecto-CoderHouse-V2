<style>
    /* FORMULARIO */
/* formStyles.css */
.form-container {
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
    padding: 20px;
    background-color: #f9f9f9;
    border: 1px solid #ccc;
    border-radius: 8px;
}

.form-container h2 {
    text-align: center;
    margin-bottom: 20px;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.form-group input[type="text"],
.form-group input[type="number"],
.form-group select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
}

.form-group button {
    width: 100%;
    padding: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.form-group button:hover {
    background-color: #0056b3;
}


</style>
<link rel="stylesheet" href="/admin/assets/style.css">

<!-- SIDEBAR -->
<section id="sidebar">
    <a href="#" class="brand">
        <i class='bx bxs-smile'></i>
        <span class="text">Admin</span>
    </a>
    <ul class="side-menu top">
        <li class="active">
            <a href="#">
                <i class='bx bxs-dashboard'></i>
                <span class="text">Usuarios</span>
            </a>
        </li>
        <li>
            <a href="#" id="Productos">
                <i class='bx bxs-shopping-bag-alt'></i>
                <span class="text">Productos</span>
            </a>
        </li>
    </ul>
    <ul class="side-menu">
        <li>
            <a href="#" class="logout">
                <i class='bx bxs-log-out-circle'></i>
                <form action="/api/sessions/logout" method="POST">
                    <span class="text"><button type="submit">Cerrar Sesión</button></span>
                </form>
            </a>
        </li>
    </ul>
</section>
<!-- SIDEBAR -->

<!-- CONTENT -->
<section id="content">
    <!-- NAVBAR -->

    <!-- MAIN -->
    <main>
        <div class="head-title">
            <div class="left">
                <h1>Lista de Usuarios</h1>
            </div>
            <div class="right">
                <button id="deleteAllInactive" class="btn-delete-all">Eliminar usuarios inactivos (2+ días)</button>
            </div>
        </div>

        <div class="table-data">
            <div class="order">
                <div class="head">
                    <h3>Usuarios activos</h3>
                    <i class='bx bx-search'></i>
                    <i class='bx bx-filter'></i>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th>Email</th>
                            <th>User</th>
                            <th>Date Order</th>
                            <th>Status</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="userList"></tbody>
                    <button id="prevButton" disabled>Anterior</button>
                    <button id="nextButton" disabled>Siguiente</button>
                </table>
            </div>
        </div>
    </main>
</section>

<script src="/admin/assets/script.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let currentPage = 1;
    let hasPrevPage, hasNextPage, prevPage, nextPage;
	let emailUser = "{{user.email}}";

    document.getElementById('Productos').addEventListener('click', function () {
        window.location.href = `/adminstore`;
    });

    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');

    prevButton.addEventListener('click', () => {
        if (hasPrevPage) {
            loadUsers(prevPage);
        }
    });

    nextButton.addEventListener('click', () => {
        if (hasNextPage) {
            loadUsers(nextPage);
        }
    });

    function loadUsers(page) {
        socket.emit('viewUsers', { page: page });
    }

    socket.on('realTimeUsers', users => {
        const userList = document.getElementById('userList');
        userList.innerHTML = '';

        prevPage = users.prevPage;
        nextPage = users.nextPage;

        hasPrevPage = users.hasPrevPage;
        hasNextPage = users.hasNextPage;

        prevButton.disabled = !hasPrevPage;
        nextButton.disabled = !hasNextPage;
		function formatDate(date) {
			const d = new Date(date);
			const day = String(d.getDate()).padStart(2, '0');
			const month = String(d.getMonth() + 1).padStart(2, '0'); // Los meses comienzan en 0
			const year = d.getFullYear();
			return `${day}-${month}-${year}`;
		}
        users.docs.forEach(user => {
            const userRow = document.createElement('tr');
            const lastConnection = formatDate(user.last_connection)
			console.log(lastConnection)
            const now = Date.now();
			console.log(now)
            const diffInDays = Math.floor((now - user.last_connection) / (1000 * 60 * 60 * 24));

            userRow.classList.add('user');
            if (diffInDays > 2) {
                userRow.classList.add('inactive');
            }

            userRow.innerHTML = `
                <td>${user.email}</td>
                <td>${user.first_name} ${user.last_name}</td>
                <td>${lastConnection}</td>
                <td>
                    <select id="role-${user.id}">
                        <option value="user" ${user.role === 'user' ? 'selected' : ''}>User</option>
                        <option value="premium" ${user.role === 'premium' ? 'selected' : ''}>Premium</option>
                    </select>
                    <button onclick="updateRole('${user.id}')">Actualizar</button>
                </td>
                <td>
                    <button class="btn-delete" onclick="deleteUser('${user.id}')">Eliminar</button>
                </td>
            `;
            userList.appendChild(userRow);
        });
    });

    function updateRole(userId) {
        const selectedRole = document.getElementById(`role-${userId }`).value;
        socket.emit('updateUserRole', { userId, role: selectedRole });
    }

    function deleteUser(user) {
        socket.emit('deleteUser', { user, emailUser });
    }

    document.getElementById('deleteAllInactive').addEventListener('click', () => {
        socket.emit('deleteAllInactiveUsers', { page: currentPage, emailUser });
    });

    loadUsers(currentPage);
</script>

<style>
    .inactive {
        background-color: #f8d7da;
    }

    .btn-delete {
        background-color: #ff4c4c;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
    }

    .btn-delete-all {
        background-color: #dc3545;
        color: white;
        padding: 10px 15px;
        border: none;
        cursor: pointer;
    }

    .btn-delete-all:hover {
        background-color: #c82333;
    }
</style>
