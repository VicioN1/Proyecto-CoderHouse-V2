<style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
      overflow-y: scroll;
    }
    .container {
      background-color: #ffffff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      max-width: 600px;
      width: 100%;
      margin: 20px auto;
    }
    .product {
      border: 1px solid #ccc;
      padding: 10px;
      margin-bottom: 10px;
    }
    .addToCartButton {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 10px 20px;
      cursor: pointer;
    }
    .addToCartButton.added {
      background-color: #28a745;
    }
    .addToCartButton:disabled {
      background-color: #d3d3d3;
      color: #7a7a7a;
      cursor: not-allowed;
    }
    #message {
      text-align: center;
      margin-top: 20px;
      color: red;
    }
    .modal {
      display: none; 
      position: fixed;
      z-index: 1; 
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0,0,0);
      background-color: rgba(0,0,0,0.4); 
    }
    .modal-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%; 
      max-width: 400px;
      text-align: center;
    }
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }
    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
  </style>
  <div class="container">
    <h1>Perfil de {{user.first_name}} {{user.last_name}}</h1>
    <p>Email: {{user.email}}</p>
    <p>Edad: {{user.age}}</p>
    <p>Rol: {{user.role}}</p>
    <p>Cart: {{user.cart}}</p>
    <div id="message"></div>
    <form action="/api/sessions/logout" method="POST">
        <button type="submit">Cerrar Sesión</button>
    </form>
    <button id="viewCart">Ver Carrito</button>
    <button id="UserPremium">Pasar a UserPremium</button>
    <h1>Lista de Productos</h1>
    <div id="productList"></div>
    <button id="prevButton" disabled>Anterior</button>
    <button id="nextButton" disabled>Siguiente</button>
    <div id="message"></div>
  </div>

  <div id="myModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <p>Tu sesión será cerrada para el cambio de usuario.</p>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    let currentPage = 1;
    let hasPrevPage, hasNextPage, prevPage, nextPage;
    let idcarrot = {{user.cart}};
    let emailUser = "{{user.email}}";
    let userId = "{{user.id}}";

    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');
    const messageElement = document.getElementById('message');
    const modal = document.getElementById("myModal");
    const span = document.getElementsByClassName("close")[0];

    function loadProducts(page) {
      socket.emit('new', { page: page });
    }

    document.getElementById('viewCart').addEventListener('click', function () {
      window.location.href = `/carts/${idcarrot}?email=${emailUser}`;
    });

    document.getElementById('UserPremium').addEventListener('click', async function () {
      try {
        const response = await fetch(`/api/user/premium/${userId}`, {
          method: 'PUT'
        });

        const result = await response.json();
        console.log("entre 0")
        if (response.json) {
          console.log("entre 1")
          if (result.needsDocumentation) {
            console.log("entre 2")
            window.location.href = `/documentacion/${userId}`;
            return;
          }
        } else {
          messageElement.innerText = result.message || 'Error al cambiar a UserPremium.';
        }
      } catch (error) {
        messageElement.innerText = 'Error al cambiar a UserPremium.';
      }
    });

    span.onclick = function() {
      modal.style.display = "none";
    }

    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }

    prevButton.addEventListener('click', () => {
      if (hasPrevPage) {
        loadProducts(prevPage);
      }
    });

    nextButton.addEventListener('click', () => {
      if (hasNextPage) {
        loadProducts(nextPage);
      }
    });

    socket.on('realTimeProducts', productos => {
      const productList = document.getElementById('productList');
      productList.innerHTML = '';

      hasPrevPage = productos.hasPrevPage;
      hasNextPage = productos.hasNextPage;
      prevPage = productos.prevPage;
      nextPage = productos.nextPage;

      prevButton.disabled = !hasPrevPage;
      nextButton.disabled = !hasNextPage;

      productos.docs.forEach(producto => {
        const productDiv = document.createElement('div');
        productDiv.classList.add('product');
        productDiv.innerHTML = `
          <h2>${producto.idProduct}</h2>
          <h2>${producto.title}</h2>
          <p>${producto.description}</p>
          <p>Código: ${producto.code}</p>
          <p>Precio: $${producto.price}</p>
          <p>Stock: ${producto.stock}</p>
          <p>Categoría: ${producto.category}</p>
          <button class="addToCartButton" data-product-code="${producto.idProduct}">Agregar al Carrito</button>
        `;
        productList.appendChild(productDiv);
      });

      document.querySelectorAll('.addToCartButton').forEach(button => {
        button.addEventListener('click', function () {
          const productCode = this.getAttribute('data-product-code');
          socket.emit('agregarAlCarrito', { idcarrot, productCode: productCode });

          this.textContent = 'Agregado al Carrito';
          this.classList.add('added');
          this.disabled = true;
        });
      });
    });

    loadProducts(currentPage);
  </script>