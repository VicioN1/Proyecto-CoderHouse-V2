<style>
    .product {
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 10px;
    }
    .addToCartButton {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
    }
    .addToCartButton.added {
        background-color: #28a745;
    }
    .addToCartButton:disabled {
        background-color: #d3d3d3; 
        color: #7a7a7a; 
        cursor: not-allowed;
    }
</style>
<div>
    <h1>Perfil de {{user.first_name}} {{user.last_name}}</h1>
    <p>Email: {{user.email}}</p>
    <p>Edad: {{user.age}}</p>
    <p>Rol: {{user.role}}</p>
    <p>cart: {{user.cart}}</p>
    <form action="/api/sessions/logout" method="POST">
        <button type="submit">Cerrar Sesión</button>
    </form>
    <button id="viewCart">Ver Carrito</button>
    <h1>Lista de Productos</h1>
    <div id="productList"></div>
    <button id="prevButton" disabled>Anterior</button>
    <button id="nextButton" disabled>Siguiente</button>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let currentPage = 1;
    let hasPrevPage, hasNextPage, prevPage, nextPage;
    let idcarrot = {{user.cart}};
    let emailUser = "<%= user.email %>";

    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');

    function loadProducts(page) {
        socket.emit('new', { page: page });
    }

    document.getElementById('viewCart').addEventListener('click', function () {
        window.location.href = `/carts/${idcarrot}?email=${{{user.email}}}`;
    });

    prevButton.addEventListener('click', () => {
        if (hasPrevPage) {
            loadProducts(prevPage);
        }
    });

    nextButton.addEventListener('click', () => {
        if (hasNextPage) {
            loadProducts(nextPage);
        }
    });

    socket.on('realTimeProducts', productos => {
        const productList = document.getElementById('productList');
        productList.innerHTML = '';

        hasPrevPage = productos.hasPrevPage;
        hasNextPage = productos.hasNextPage;
        prevPage = productos.prevPage;
        nextPage = productos.nextPage;

        prevButton.disabled = !hasPrevPage;
        nextButton.disabled = !hasNextPage;

        productos.docs.forEach(producto => {
            const productDiv = document.createElement('div');
            productDiv.classList.add('product');
            productDiv.innerHTML = `
                <h2>${producto.idProduct}</h2>
                <h2>${producto.title}</h2>
                <p>${producto.description}</p>
                <p>Código: ${producto.code}</p>
                <p>Precio: $${producto.price}</p>
                <p>Stock: ${producto.stock}</p>
                <p>Categoría: ${producto.category}</p>
                <button class="addToCartButton" data-product-code="${producto.idProduct}">Agregar al Carrito</button>
            `;
            productList.appendChild(productDiv);
        });

        document.querySelectorAll('.addToCartButton').forEach(button => {
            button.addEventListener('click', function () {
                const productCode = this.getAttribute('data-product-code');
                socket.emit('agregarAlCarrito', { idcarrot, productCode: productCode });

                // Cambiar el texto y deshabilitar el botón después de agregar al carrito
                this.textContent = 'Agregado al Carrito';
                this.classList.add('added');
                this.disabled = true;
            });
        });
    });

    loadProducts(currentPage);
</script>
